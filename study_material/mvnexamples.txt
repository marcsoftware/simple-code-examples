mvn clean	_ target directory.
mvn validate	_ if the project is correct.
mvn compile	_ source code, classes stored in target/classes.
mvn test	Run _ 
mvn package	Take the compiled code and package it in its distributable format, e.g. JAR, WAR.
mvn verify	Run any checks to verify the MVN package is valid and meets quality criteria.
mvn install	Install the package into the local repository.
mvn deploy	Copies the final MVN package to the remote repository.

mvn dependency:tree
mvn dependency:analyze
mvn archetype:generate
mvn site:site

mvn -o package
mvn -q package
mvn -T 4 clean install
mvn COMMAND     --debug 

pom.xml
<dependencies>
mvnrepository.com


<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>com.example</groupId>
    <artifactId>hello</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>


   <properties>
     <maven.compiler.source>1.8</maven.compiler.source>
     <maven.compiler.target>1.8</maven.compiler.target>
</properties>

</project>


 java -jar backend/target/backend-0.0.1-SNAPSHOT.jar